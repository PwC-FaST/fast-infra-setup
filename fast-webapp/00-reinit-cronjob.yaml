apiVersion: v1
kind: ServiceAccount
metadata:
  name: reinit-cronjob
  namespace: fast-platform
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: reinit-cronjob
  namespace: fast-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reinit-cronjob
subjects:
- kind: ServiceAccount
  name: reinit-cronjob
  namespace: fast-platform
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reinit-cronjob
  namespace: fast-platform
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","delete"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: reinit-cronjob
  namespace: fast-platform
  labels:
    platform: fast
    module: core
    cronjob: reinit
spec:
  schedule: "* 2 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            platform: fast
            module: core
            cronjob: reinit
        spec:
          restartPolicy: Never
          serviceAccount: reinit-cronjob
          containers:
          - name: kubectl
            image: bitnami/kubectl:1.10
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              echo kubectl -n $K8S_NAMESPACE exec -ti $(kubectl -n $K8S_NAMESPACE get pod -l $K8S_POD_LABEL -o name | sed -e 's/pod\///g') -c $K8S_POD_CONTAINER_NAME make resetdb migrate collectstatic loadinit
              echo kubectl -n $K8S_NAMESPACE delete $(kubectl -n $K8S_NAMESPACE get pod -l $K8S_POD_LABEL -o name)
            env:
            - name: K8S_NAMESPACE
              value: fast-platform
            - name: K8S_POD_LABEL
              value: platform=fast,module=core,app=webapp
            - name: K8S_POD_CONTAINER_NAME
              value: webapp